
ll n; vector<vll>boss,adj;
vll level;
void dfs(ll node,ll par,ll l){//stores immediate parent
    boss[node][0]=par;
    level[node]=l;
    for(auto it:adj[node]){
        if(it!=par) dfs(it,node,l+1);
    }
}
void precompute(){
    dfs(1,-1,0);
    rep(i,1,21){
        rep(j,1,n+1){
            if(boss[j][i-1]!=-1)
            boss[j][i]=boss[boss[j][i-1]][i-1];
        }
    }
}

ll lca(ll p,ll q){
    if(level[p]<level[q]) swap(p,q);
    ll diff=level[p]-level[q];
    for(ll i=20;i>=0;i--){ 
        //dono nodes ko same level par le aaye
        if(diff&(1<<i)) p=boss[p][i];
    }

    if(p==q) return p;

    for(ll i=20;i>=0;i--){
        // ab dono same level par hai
        // dono ko saath mn move krenge
        // sabse bada jump se chota jump ki taraf iterate krenge
        // jighat parent match hua woh answer
        if(boss[p][i]!=boss[q][i]){
            p=boss[p][i];
            q=boss[q][i];
        }
    }
    return boss[p][0];
}
